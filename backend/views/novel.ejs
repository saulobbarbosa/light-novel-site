<%- include('partials/header') %>

<div class="novel-details">
    <!-- Banner -->
    <div class="relative mb-8">
        <img src="<%= novel.bannerImage %>" alt="Banner de <%= novel.title %>" class="w-full h-48 md:h-64 object-cover rounded-lg shadow-lg">
        <div class="absolute inset-0 bg-black bg-opacity-50 flex items-end p-4 md:p-8">
            <div class="flex-grow">
                <h1 class="text-2xl sm:text-3xl md:text-5xl font-bold text-white"><%= novel.title %></h1>
            </div>
            <% if (user && user.role === 'admin') { %>
                <a href="/novels/<%= novel._id %>/edit" class="bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-3 text-sm sm:px-4 rounded transition duration-300 flex-shrink-0">Editar Obra</a>
            <% } %>
        </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
        <!-- Coluna da Esquerda (Informações) -->
        <div class="lg:col-span-1">
            <img src="<%= novel.coverImage %>" alt="Capa de <%= novel.title %>" class="w-full rounded-lg shadow-md mb-4">
             <% if (user) { %>
                <% const isFavorited = user.favorites.some(fav => fav.equals(novel._id)); %>
                <% if (isFavorited) { %>
                    <form action="/users/favorites/remove/<%= novel._id %>" method="POST">
                        <button type="submit" class="w-full bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded transition duration-300 mb-4">Remover dos Favoritos</button>
                    </form>
                <% } else { %>
                     <form action="/users/favorites/add/<%= novel._id %>" method="POST">
                        <button type="submit" class="w-full bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded transition duration-300 mb-4">Adicionar aos Favoritos</button>
                    </form>
                <% } %>
            <% } %>
            <div class="bg-gray-800 p-4 rounded-lg">
                <h3 class="font-bold text-lg mb-2 text-white">Gêneros</h3>
                <div class="flex flex-wrap gap-2">
                    <% novel.genres.forEach(genre => { %>
                        <span class="bg-purple-600 text-white text-xs font-semibold px-2.5 py-0.5 rounded-full"><%= genre %></span>
                    <% }) %>
                </div>
            </div>
        </div>

        <!-- Coluna da Direita (Sinopse e Capítulos) -->
        <div class="lg:col-span-3">
            <div class="bg-gray-800 p-6 rounded-lg mb-8">
                <h2 class="text-2xl font-bold text-white mb-4">Sinopse</h2>
                <p class="text-gray-300 leading-relaxed"><%= novel.synopsis %></p>
            </div>

            <div class="bg-gray-800 p-6 rounded-lg">
                <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 gap-4">
                    <h2 class="text-2xl font-bold text-white">Capítulos</h2>
                    <button id="sort-button" class="bg-gray-600 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded text-sm transition duration-300 w-full sm:w-auto">
                        Inverter Ordem
                    </button>
                </div>
                <ul id="chapter-list" class="space-y-2">
                    <% if (novel.chapters && novel.chapters.length > 0) { %>
                        <!-- Alteração 1: Ordenação inicial por título decrescente -->
                        <% novel.chapters.sort((a, b) => b.title.localeCompare(a.title, undefined, { numeric: true, sensitivity: 'base' })).forEach(chapter => { %>
                            <% const isRead = readChapters.has(chapter._id.toString()); %>
                            <!-- Alteração 2: Adicionado data-chapter-title para o script -->
                            <li data-chapter-title="<%= chapter.title %>">
                                <div class="flex justify-between items-center p-3 rounded transition duration-300 <%= isRead ? 'bg-purple-900 hover:bg-purple-800' : 'bg-gray-700 hover:bg-purple-800' %>">
                                    <a href="/novels/<%= novel._id %>/chapters/<%= chapter._id %>" class="flex-grow <%= isRead ? 'text-gray-400' : 'text-gray-200' %>">
                                        <span><%= chapter.title %></span>
                                    </a>
                                    <% if (isRead) { %>
                                        <div class="flex items-center space-x-3 ml-4">
                                            <span class="text-xs font-semibold text-purple-400 hidden sm:inline">LIDO</span>
                                            <form action="/users/history/remove/<%= chapter._id %>" method="POST" class="flex items-center">
                                                <button type="submit" title="Marcar como não lido" class="text-gray-500 hover:text-white transition duration-300">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                                                    </svg>
                                                </button>
                                            </form>
                                        </div>
                                    <% } %>
                                </div>
                            </li>
                        <% }) %>
                    <% } else { %>
                        <p class="text-gray-400">Nenhum capítulo disponível ainda.</p>
                    <% } %>
                </ul>
            </div>
        </div>
    </div>
</div>

<%- include('partials/footer') %>

<!-- Alteração 3: Script de ordenação atualizado para usar títulos -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const sortButton = document.getElementById('sort-button');
        const chapterList = document.getElementById('chapter-list');
        // A página é renderizada inicialmente em ordem decrescente por título
        let currentSortIsDescending = true; 

        sortButton.addEventListener('click', function() {
            const items = Array.from(chapterList.getElementsByTagName('li'));
            
            // Inverte a direção da ordenação para o próximo clique
            currentSortIsDescending = !currentSortIsDescending;

            items.sort(function(a, b) {
                const titleA = a.dataset.chapterTitle;
                const titleB = b.dataset.chapterTitle;
                
                // Usa localeCompare com a opção 'numeric' para ordenar corretamente números dentro do texto
                if (currentSortIsDescending) {
                    return titleB.localeCompare(titleA, undefined, { numeric: true, sensitivity: 'base' });
                } else {
                    return titleA.localeCompare(titleB, undefined, { numeric: true, sensitivity: 'base' });
                }
            });

            // Limpa a lista e adiciona os itens na nova ordem
            chapterList.innerHTML = '';
            items.forEach(item => chapterList.appendChild(item));
        });
    });
</script>
